{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","id","src","primitive","type","color","intensity","position","height","radius","theta-length","width","rotation","geometry","material","x","y","z","particle-system","preset","light","gltf-model","text","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAmCeA,MA5Bf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qCACA,eAAC,QAAD,CAAOA,UAAU,QAAjB,UAEA,qCACA,qBAAKC,GAAG,gBAAgBC,IAAI,qDACxB,qBAAKD,GAAG,aAAaC,IAAI,sDAE3B,cAAC,SAAD,CAAQC,UAAU,UAAUC,KAAK,UAAUC,MAAM,YACjD,cAAC,SAAD,CAAQF,UAAU,UAAUC,KAAK,QAAQE,UAAU,IAAIC,SAAS,UAChE,cAAC,SAAD,CAAQJ,UAAU,QAAQK,OAAO,OAAOC,OAAO,KAAKP,IAAI,cAAcQ,eAAa,KAAKC,MAAM,SAC9F,cAAC,SAAD,CAAQR,UAAU,UAAUD,IAAI,iBAAiBU,SAAS,UAAUJ,OAAO,MAAMG,MAAM,QACvF,cAAC,SAAD,CAAQE,SAAU,CAACV,UAAW,OAAQW,SAAU,CAACT,MAAO,OAAQE,SAAU,CAACQ,EAAG,EAAGC,EAAG,EAAGC,GAAI,KAC3F,cAAC,SAAD,CAAQC,kBAAiB,CAACC,OAAQ,UAClC,cAAC,SAAD,CAAQC,MAAO,CAAChB,KAAM,WACtB,cAAC,SAAD,CAAQiB,aAAY,CAACnB,IAAK,sBAC1B,cAAC,SAAD,CAAQoB,KAAM,CAACC,MAAO,mBACtB,cAAC,SAAD,CAAQpB,UAAU,QAAQE,MAAM,MAAME,SAAS,WACvD,cAAC,SAAD,CAAQJ,UAAU,WAAWE,MAAM,QAAQE,SAAS,YACpD,cAAC,SAAD,CAAQJ,UAAU,aAAaE,MAAM,OAAOE,SAAS,WACrD,cAAC,SAAD,CAAQJ,UAAU,QAAQD,IAAI,gBAlBxB,WCCSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.09063e08.chunk.js","sourcesContent":["\nimport './scss/App.scss';\nimport 'aframe';\nimport {Entity, Scene} from 'aframe-react'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>XYZ</h1>\n      <Scene className=\"scene\">\n\n      <a-assets>\n      <img id=\"groundTexture\" src=\"https://cdn.aframe.io/a-painter/images/floor.jpg\"/>\n          <img id=\"skyTexture\" src=\"https://cdn.aframe.io/a-painter/images/sky.jpg\"/>\n        </a-assets>\n        <Entity primitive=\"a-light\" type=\"ambient\" color=\"#445451\"/>\n        <Entity primitive=\"a-light\" type=\"point\" intensity=\"2\" position=\"2 4 4\"/>\n        <Entity primitive=\"a-sky\" height=\"2048\" radius=\"30\" src=\"#skyTexture\" theta-length=\"90\" width=\"2048\"/>\n        <Entity primitive=\"a-plane\" src=\"#groundTexture\" rotation=\"-90 0 0\" height=\"100\" width=\"100\"/>\n        <Entity geometry={{primitive: 'box'}} material={{color: 'red'}} position={{x: 0, y: 0, z: -5}}/>\n        <Entity particle-system={{preset: 'snow'}}/>\n        <Entity light={{type: 'point'}}/>\n        <Entity gltf-model={{src: 'virtualcity.gltf'}}/>\n        <Entity text={{value: 'Hello, WebVR!'}}/>\n        <Entity primitive='a-box' color=\"red\" position=\"0 0 -5\"/>\n<Entity primitive='a-sphere' color=\"green\" position=\"-2 0 -3\"/>\n<Entity primitive='a-cylinder' color=\"blue\" position=\"2 0 -3\"/>\n<Entity primitive='a-sky' src=\"sechelt.jpg\"/>v\n      </Scene>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { aframe } from 'aframe';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}